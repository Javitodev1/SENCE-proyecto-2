// Generated by Selenium IDE
package com;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.AfterClass;

import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.ExpectedConditions;
import java.time.Duration;
import org.testng.Assert;

public class LoginTest {
    private WebDriver driver;
    JavascriptExecutor js;
    int failedAttempts = 0; //contador de intentos fallidos

    @BeforeClass
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        driver.manage().window().setSize(new Dimension(1529, 993));
    }

    @AfterClass
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void loginExitoso() {
        driver.get("https://demoqa.com/login");
        driver.manage().window().setSize(new Dimension(1529, 993));
        driver.findElement(By.id("userName")).click();
        driver.findElement(By.id("userName")).sendKeys("pedrito123");
        driver.findElement(By.id("password")).sendKeys("Pedrito123!");
        driver.findElement(By.id("login")).click();

        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[text()='Log out']"))).click();
    }

    @DataProvider(name = "loginData")
public Object[][] getLoginData() throws IOException {
    FileInputStream fis = new FileInputStream("src/test/resources/datos/LoginData.xlsx");
    XSSFWorkbook workbook = new XSSFWorkbook(fis);
    XSSFSheet sheet = workbook.getSheetAt(0);

    int rowCount = sheet.getPhysicalNumberOfRows();
    int colCount = sheet.getRow(0).getLastCellNum();

    Object[][] data = new Object[rowCount - 1][colCount];

    for (int i = 1; i < rowCount; i++) {
        for (int j = 0; j < colCount; j++) {
            data[i - 1][j] = sheet.getRow(i).getCell(j).toString();
        }
    }

    workbook.close();
    fis.close();
    return data;
}
    @Test(dataProvider = "loginData")
public void loginFallido(String username, String password) {
     if (failedAttempts >= 3) {
        System.out.println("Simulaci√≥n: usuario bloqueado por m√∫ltiples intentos fallidos.");
        return;
    }

    driver.findElement(By.id("userName")).clear();
    driver.findElement(By.id("userName")).sendKeys(username);
    driver.findElement(By.id("password")).clear();
    driver.findElement(By.id("password")).sendKeys(password);
    driver.findElement(By.id("login")).click();

    // Esperar el mensaje de error
    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
    String mensajeError = wait.until(
        ExpectedConditions.visibilityOfElementLocated(By.id("name"))
    ).getText();

    // Validar que el mensaje sea el esperado
    System.out.println("üì© Mensaje mostrado: " + mensajeError);
    Assert.assertTrue(mensajeError.contains("Invalid username or password!"), "No se encontr√≥ el mensaje esperado.");

    // Si el mensaje es correcto, aumentar contador de fallos
    failedAttempts++;

    if (failedAttempts == 3) {
        System.out.println("3 intentos fallidos detectados. Simulando bloqueo.");
    }
}
}

